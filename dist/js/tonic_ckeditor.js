/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/tonic_ckeditor.js":
/*!******************************!*\
  !*** ./js/tonic_ckeditor.js ***!
  \******************************/
/***/ (() => {

eval("/* eslint-disable func-names, no-mutable-exports, comma-dangle, strict */\n\n((Drupal, drupalSettings, once) => {\n  Drupal.behaviors.tonicCKEditor = {\n    attach: context => {\n      Drupal.tonicCKEditor.init(context);\n    }\n  };\n  Drupal.tonicCKEditor = {\n    init: context => {\n      once('tonicCKEditors', 'body', context).forEach(() => {\n        if (window.CKEDITOR && CKEDITOR !== undefined) {\n          // If on CKEditor config, do nothing.\n          if (drupalSettings.path.currentPath.indexOf('admin/config/content/formats/manage') > -1) {\n            return;\n          }\n\n          // Get configs.\n          const variablesCss = drupalSettings.tonic.variables_css_path;\n          const accentCss = drupalSettings.tonic.accent_css_path;\n          const contentsCss = drupalSettings.tonic.ckeditor_css_path;\n          const accentColorPreset = drupalSettings.tonic.preset_accent_color;\n          const accentColor = drupalSettings.tonic.accent_color;\n          const darkmodeClass = drupalSettings.tonic.darkmode_class;\n\n          // Class for Darkmode.\n          if (localStorage.getItem('Drupal.tonic.darkmode') == 1 || localStorage.getItem('Drupal.tonic.darkmode') === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            CKEDITOR.config.bodyClass = darkmodeClass;\n          }\n\n          // Content stylesheets.\n          if (CKEDITOR.config.contentsCss === undefined) {\n            CKEDITOR.config.contentsCss.push(variablesCss, accentCss, contentsCss);\n          }\n\n          // Contextmenu stylesheets.\n          if (CKEDITOR.config.contextmenu_contentsCss === undefined) {\n            CKEDITOR.config.contextmenu_contentsCss = new Array();\n\n            // Check if skinName is set.\n            if (typeof CKEDITOR.skinName === 'undefined') {\n              CKEDITOR.skinName = CKEDITOR.skin.name;\n            }\n            CKEDITOR.config.contextmenu_contentsCss.push(CKEDITOR.skin.getPath('editor'), variablesCss, accentCss, contentsCss);\n          }\n          CKEDITOR.on('instanceReady', element => {\n            const editor = element.editor;\n\n            // Initial accent color.\n            editor.document.$.body.setAttribute('data-tonic-accent', accentColorPreset);\n            if (accentColorPreset === 'custom' && accentColor) {\n              Drupal.tonicAccent.setCustomAccentColor(accentColor, editor.document.$.head);\n            }\n\n            // Change from Code to Editor.\n            editor.on('mode', function () {\n              if (this.mode == 'wysiwyg') {\n                editor.document.$.body.setAttribute('data-tonic-accent', accentColorPreset);\n                if (accentColorPreset === 'custom' && accentColor) {\n                  Drupal.tonicAccent.setCustomAccentColor(accentColor, editor.document.$.head);\n                }\n                if (localStorage.getItem('Drupal.tonic.darkmode') === 'auto') {\n                  if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                    editor.document.$.body.classList.add(darkmodeClass);\n                  } else {\n                    editor.document.$.body.classList.remove(darkmodeClass);\n                  }\n                }\n              }\n            });\n\n            // Contextual menu.\n            editor.on('menuShow', function (element) {\n              const darkModeClass = localStorage.getItem('Drupal.tonic.darkmode') == 1 || localStorage.getItem('Drupal.tonic.darkmode') === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches ? darkmodeClass : '';\n              const iframeElement = element.data[0].element.$.childNodes[0].contentWindow.document;\n              if (darkModeClass) {\n                iframeElement.body.classList.add(darkModeClass);\n              }\n              iframeElement.body.setAttribute('data-tonic-accent', accentColorPreset);\n              if (accentColorPreset === 'custom' && accentColor) {\n                Drupal.tonicAccent.setCustomAccentColor(accentColor, iframeElement.head);\n              }\n            });\n\n            // Toggle Darkmode.\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n              if (e.matches && localStorage.getItem('Drupal.tonic.darkmode') === 'auto') {\n                editor.document.$.body.classList.add(darkmodeClass);\n                if (document.querySelectorAll(`.${editor.id}.cke_panel`).length > 0) {\n                  const iframeElement = document.querySelector(`.${editor.id}.cke_panel`).childNodes[0].contentWindow.document;\n                  iframeElement.body.classList.add(darkmodeClass);\n                }\n              }\n            });\n\n            // Change to Lightmode.\n            window.matchMedia('(prefers-color-scheme: light)').addEventListener('change', e => {\n              if (e.matches && localStorage.getItem('Drupal.tonic.darkmode') === 'auto') {\n                editor.document.$.body.classList.remove(darkmodeClass);\n                if (document.querySelectorAll(`.${editor.id}.cke_panel`).length > 0) {\n                  const iframeElement = document.querySelector(`.${editor.id}.cke_panel`).childNodes[0].contentWindow.document;\n                  iframeElement.body.classList.remove(darkmodeClass);\n                }\n              }\n            });\n          });\n        }\n      });\n    }\n  };\n})(Drupal, drupalSettings, once);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/tonic_ckeditor.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/tonic_ckeditor.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=tonic_ckeditor.js.map